{
  "service": {
    "service": "ttt-mini",
    "serviceObject": {
      "name": "ttt-mini"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs20.x",
      "region": "ap-south-1",
      "environment": {
        "PROJECTS_TABLE": "ttt-mini-projects-dev",
        "INITIATIVES_TABLE": "ttt-mini-initiatives-dev",
        "STATUS_LOGS_TABLE": "ttt-mini-status-logs-dev",
        "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:PutItem",
            "dynamodb:UpdateItem",
            "dynamodb:DeleteItem",
            "dynamodb:GetItem",
            "dynamodb:Query",
            "dynamodb:Scan"
          ],
          "Resource": [
            "arn:aws:dynamodb:ap-south-1:*:table/ttt-mini-projects-dev",
            "arn:aws:dynamodb:ap-south-1:*:table/ttt-mini-initiatives-dev",
            "arn:aws:dynamodb:ap-south-1:*:table/ttt-mini-status-logs-dev"
          ]
        }
      ],
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/ttt-mini-dev-api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "ttt-mini",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ttt-mini-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/ttt-mini-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "ttt-mini",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/ttt-mini/dev/1756890654751-2025-09-03T09:10:54.751Z/ttt-mini.zip"
              },
              "Handler": "src/app.handler",
              "Runtime": "nodejs20.x",
              "FunctionName": "ttt-mini-dev-api",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PROJECTS_TABLE": "ttt-mini-projects-dev",
                  "INITIATIVES_TABLE": "ttt-mini-initiatives-dev",
                  "STATUS_LOGS_TABLE": "ttt-mini-status-logs-dev",
                  "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "ApiLambdaVersionZYgd2I5OYY6LvQHtq3k05Y7U9zAiBjZ0SHymYZvI30I": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "O4HFDYsrBnXTT+AZtrWd7VRv87AfTv/CpBrsDGK6EAM="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-ttt-mini",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ApiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteAnyProxyVar": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "ANY /{proxy+}",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "HttpApiRouteGetHealth": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "GET /health",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "ProjectsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ttt-mini-projects-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orgId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "projectId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orgId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "projectId",
                  "KeyType": "RANGE"
                }
              ]
            }
          },
          "InitiativesTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ttt-mini-initiatives-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orgId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "initiativeId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orgId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "initiativeId",
                  "KeyType": "RANGE"
                }
              ]
            }
          },
          "StatusLogsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "ttt-mini-status-logs-dev",
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "orgId",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "logId",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "orgId",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "logId",
                  "KeyType": "RANGE"
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-ttt-mini-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersionZYgd2I5OYY6LvQHtq3k05Y7U9zAiBjZ0SHymYZvI30I"
            },
            "Export": {
              "Name": "sls-ttt-mini-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-ttt-mini-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-ttt-mini-dev-HttpApiUrl"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "esbuild": {
        "bundle": true,
        "minify": true,
        "target": "node20",
        "platform": "node",
        "external": []
      }
    },
    "plugins": [
      "serverless-esbuild"
    ],
    "pluginsData": {},
    "functions": {
      "api": {
        "handler": "src/app.handler",
        "events": [
          {
            "httpApi": {
              "method": "*",
              "path": "/{proxy+}"
            },
            "resolvedMethod": "ANY",
            "resolvedPath": "/{proxy+}"
          },
          {
            "httpApi": {
              "method": "GET",
              "path": "/health"
            },
            "resolvedMethod": "GET",
            "resolvedPath": "/health"
          }
        ],
        "name": "ttt-mini-dev-api",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "nodejs20.x",
        "vpc": {},
        "versionLogicalId": "ApiLambdaVersionZYgd2I5OYY6LvQHtq3k05Y7U9zAiBjZ0SHymYZvI30I"
      }
    },
    "resources": {
      "Resources": {
        "ProjectsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ttt-mini-projects-dev",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "orgId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "projectId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orgId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "projectId",
                "KeyType": "RANGE"
              }
            ]
          }
        },
        "InitiativesTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ttt-mini-initiatives-dev",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "orgId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "initiativeId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orgId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "initiativeId",
                "KeyType": "RANGE"
              }
            ]
          }
        },
        "StatusLogsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "ttt-mini-status-logs-dev",
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "orgId",
                "AttributeType": "S"
              },
              {
                "AttributeName": "logId",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "orgId",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "logId",
                "KeyType": "RANGE"
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "ttt-mini",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false
  },
  "package": {
    "artifactDirectoryName": "serverless/ttt-mini/dev/1756890654751-2025-09-03T09:10:54.751Z",
    "artifact": "ttt-mini.zip"
  }
}